TODO LIST:
* Add new Server Pushed DOM event technology support. DONE
  * define message: label+body+ref#
  * define message list: message+next with add-to-queue and pop-head methods + msg ref# management
  * define box: client-key+server-key(=cookie)+pattern+bound client connection+message list
  * link boxs eachothers (next field) + box list head added into hs top-level structure
  * bus_forward(msg) function looks for matching pattern in boxes list. msg is added into matching boxes' message lists.
  * When a new message is pushed into the box with a bound client who is starved and paused, one wakes it up.
  * When a buffer response of a Bus-Get request has been emptied, one extracts a  message from its related box, if any. Otherwise, one blocks as usual.
  * One never loads more than one message into a given buffer response (to improve resiliabity and data factorization).
  * When a client connection is disconnected, one unbinds its corresponding box.

TODO NEXT LIST:
* index boxes by pattern. Can one imagine a hash-based way to accelerate pattern-matching?
* Improve channel to client mapping efficiency.
* Improve client disconnection detection (it might be theorically impossible to enhance it)
* URL parameter to set content-type in Post-In-Get query
